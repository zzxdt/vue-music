import{a9 as I,aa as L,n as m,a6 as N,ab as w}from"./index-nvWmsnf9.js";import{t as g}from"./throttle-IPVAgrZU.js";const i="ElInfiniteScroll",A=50,O=200,_=0,C={delay:{type:Number,default:O},distance:{type:Number,default:_},disabled:{type:Boolean,default:!1},immediate:{type:Boolean,default:!0}},E=(t,n)=>Object.entries(C).reduce((o,[e,s])=>{var u,l;const{type:d,default:r}=s,a=t.getAttribute(`infinite-scroll-${e}`);let c=(l=(u=n[a])!=null?u:a)!=null?l:r;return c=c==="false"?!1:c,c=d(c),o[e]=Number.isNaN(c)?r:c,o},{}),h=t=>{const{observer:n}=t[i];n&&(n.disconnect(),delete t[i].observer)},D=(t,n)=>{const{container:o,containerEl:e,instance:s,observer:u,lastScrollTop:l}=t[i],{disabled:d,distance:r}=E(t,s),{clientHeight:a,scrollHeight:c,scrollTop:f}=e,S=f-l;if(t[i].lastScrollTop=f,u||d||S<0)return;let b=!1;if(o===t)b=c-(a+f)<=r;else{const{clientTop:T,scrollHeight:y}=t,H=w(t,e);b=f+a>=H+T+y-r}b&&n.call(s)};function v(t,n){const{containerEl:o,instance:e}=t[i],{disabled:s}=E(t,e);s||o.clientHeight===0||(o.scrollHeight<=o.clientHeight?n.call(e):h(t))}const F={async mounted(t,n){const{instance:o,value:e}=n;I(e)||L(i,"'v-infinite-scroll' binding value must be a function"),await m();const{delay:s,immediate:u}=E(t,o),l=N(t,!0),d=l===window?document.documentElement:l,r=g(D.bind(null,t,e),s);if(l){if(t[i]={instance:o,container:l,containerEl:d,delay:s,cb:e,onScroll:r,lastScrollTop:d.scrollTop},u){const a=new MutationObserver(g(v.bind(null,t,e),A));t[i].observer=a,a.observe(t,{childList:!0,subtree:!0}),v(t,e)}l.addEventListener("scroll",r)}},unmounted(t){const{container:n,onScroll:o}=t[i];n==null||n.removeEventListener("scroll",o),h(t)},async updated(t){t[i]||await m();const{containerEl:n,cb:o,observer:e}=t[i];n.clientHeight&&e&&v(t,o)}},p=F;p.install=t=>{t.directive("InfiniteScroll",p)};const x=p;export{x as E};
